# This script defines the different stages of a CI job to test my DC motor controller using a CICD framework

#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - check
  - test
  - codeGen
  - reportOut

# if the logs path is changed in startup.m (to store the generated logs during pipeline execution), then change it here as well
# as this path ensures that logs are stored as artifacts upto package stage and then HTML Summary report is generated using them
variables:
  LOGS_PATH: "./GeneratedArtifacts"
  ARTIFACTS_DOWNLOAD_PATH: "C:/Users/$GITLAB_USER_LOGIN/Downloads"

mdlAdvisor-checks-job:       # This job runs in the model checks stage, which runs first.
    stage: check
    tags:
      - on-prem
    script:
      - mw -using R2022b matlab -nodesktop -batch "openProject('DCMotorCtrl.prjj'); runProjectChecks;"
    artifacts:
      when: always
      paths:
        - $LOGS_PATH/CheckResults/

unit-SlTest-job:   # This job runs in the test stage.
    stage: test    # It only starts when the job in the build stage completes successfully.
    tags:
        - on-prem
    script:
        - mw -using R2022b matlab -nodesktop -batch "openProject('DCMotorCtrl.prj'); runProjectTests;"
    artifacts:
      when: always
      paths:
        - $LOGS_PATH/TestResults/

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

codeGen-job:      # This job runs in the codeGen stage.
    stage: codeGen  
    tags:
        - on-prem
    script:
        - mw -using R2022b matlab -nodesktop -batch "openProject('DCMotorCtrl.prj'); genCCode;"
    artifacts:
        when: always
        paths:
            - $LOGS_PATH/CodeGen/dcmtrCtrl_PID_ert_rtw
#    reports:
#       junit: ./Design/DriverSwRequest/pipeline/analyze/testing/DriverSwRequestJUnitFormatTestResults.xml

# a stage to assert that all stages in this child pipeline have passed successfully.
# a deploy stage placeholder where ALL the artifacts are available for download
report-Out:      # Final Stage to alert users this job is donw.
    stage: reportOut
    tags:
        - on-prem
    script:
      - echo "Job Done!"
      - echo "All artifacts of previous stage can be found here"
#      - 'curl.exe --location --output "$ARTIFACTS_DOWNLOAD_PATH/DriverSwRequestArtifacts.zip" --header "PRIVATE-TOKEN: $CIPROJECTTOKEN" "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=DriverSwRequestPackage"'

