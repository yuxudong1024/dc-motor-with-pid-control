# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on: 
  push:                       # Runs on push events
  #pull_request:               # Runs on pull requests
  workflow_dispatch:          # Allows you to run this workflow manually from the Actions tab

env:
  MLM_LICENSE_TOKEN: ${{ secrets.MLM_LICENSE_TOKEN }}
  
jobs:

  # This workflow contains two jobs called "test" and "compile-webapp"
  test:
    # This job will run for all the OS present in the matrix
    strategy:
      matrix:
         os: [ubuntu-latest, windows-latest]
        #os: [ubuntu-latest, windows-latest, macos-13]
     
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
 
    steps:
      - uses: actions/checkout@v4
       
      - name: Setup MATLAB on the GitHub Actions runner
        uses: matlab-actions/setup-matlab@v2
        with:
          cache: true
          products: |
            MATLAB
            Simulink
            Stateflow
            Control_System_Toolbox
            MATLAB_Coder
            Simulink_Coder
            Embedded_Coder
            Simulink_Check
            Simulink_Coverage
            Simulink_Test
            MATLAB_Compiler
            MATLAB_Compiler_SDK
            Simulink_Compiler
            Simscape
            Simscape_Electrical
            Parallel_Computing_Toolbox
            MATLAB_Report_Generator
            Simulink_Report_Generator
            MATLAB_Support_Package_for_Arduino_Hardware
            Simulink_Support_Package_for_Arduino_Hardware

      - name: Start display server (required for building doc in MATLAB)
        run: |
          Xvfb :99 & 
          echo "DISPLAY=:99" >> $GITHUB_ENV
 
      - name: Run ${{ matrix.os }} build to run tests on it
        uses: matlab-actions/run-build@v2
        with:
          tasks: deploy
          test-results-junit: test-results/results.xml
          code-coverage-cobertura: code-coverage/coverage.xml

      - name: Junit Test Summary
        uses: test-summary/action@v2
        with:
           paths: "test-results/results.xml"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
           files: "test-results/results.xml"
 
      - name: Upload WebApp Server Archive 
        uses: actions/upload-artifact@v4
        with:
          name: DC-Motor-Pid WepApp Server Archive 
          path: GeneratedArtifacts/DeployableApps